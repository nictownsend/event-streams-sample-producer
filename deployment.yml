apiVersion: v1
kind: ConfigMap
metadata:
  name: payload-template
  namespace: flink-env
data:
  payload.hbs: |-
    {
      "ts": "{{fake-datetime-sequential this}}",
      "url" : "{{oneof "/home" "/closure" "/join-us"}}",
      "customer_id": {{fake-int this 0 50}},
       "txn_id": "{{fake-uuid this}}"
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: producer-config
  namespace: flink-env
data:
  producer.config: |-
    bootstrap.servers=my-cluster-kafka-bootstrap.flink-env.svc:9092
    key.serializer=org.apache.kafka.common.serialization.StringSerializer
    value.serializer=org.apache.kafka.common.serialization.StringSerializer
---
apiVersion: batch/v1
kind: Job
metadata:
  name: customer-txn
  namespace: flink-env
spec:
  template:
    metadata:
      labels:
        app: customer-txn
    spec:
      containers:
        - name: producer
          volumeMounts:
            - name: payload-template
              mountPath: /runtime/payload
            - name: producer-config
              mountPath: /runtime/config
            - name: flink-input
              mountPath: /opt/ibm/files
          env:
#            - name: TOPIC
#              value: txns
#            - name: NUM_THREADS
#              value: "10"
            - name: PAYLOAD_TEMPLATE
              value: /runtime/payload/payload.hbs
            - name: NUM_RECORDS
              value: "1000000"
            - name: BATCH
              value: "true"
#            - name: PRODUCER_CONFIG
#              value: /runtime/config/producer.config
          image: quay.io/nictownsend/kafka-sample-producer:1.0
          imagePullPolicy: Always
      restartPolicy: OnFailure
      volumes:
        - name: payload-template
          configMap:
            name: payload-template
        - name: producer-config
          configMap:
            name: producer-config
        - name: flink-input
          persistentVolumeClaim:
            claimName: flink-input-rwx
---